{"ast":null,"code":"import _slicedToArray from \"/Users/aleksandarzivkovic/fullstackopen_2019/part1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aleksandarzivkovic/fullstackopen_2019/part1/unicafe/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Header = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.title));\n};\n\nconst History = props => {\n  if (props.allClicks.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"the app is used by pressing the buttons\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"button press history: \", props.allClicks.join(\" \"));\n};\n\nconst Part = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.part, \" \", props.values);\n};\n\nconst Content = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Part, {\n    part: props.parts[0].name,\n    values: props.parts[0].value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Part, {\n    part: props.parts[1].name,\n    values: props.parts[1].value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Part, {\n    part: props.parts[2].name,\n    values: props.parts[2].value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nconst Total = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Number of exercises\", \" \", props.parts[0].value + props.parts[1].value + props.parts[2].value));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  let parts = [{\n    name: \"good\",\n    value: good\n  }, {\n    name: \"neutral\",\n    value: neutral\n  }, {\n    name: \"bad\",\n    value: bad\n  }];\n  const title = \"give feedback\";\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"statistics\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Content, {\n    parts: parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/aleksandarzivkovic/fullstackopen_2019/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","title","History","allClicks","length","join","Part","part","values","Content","parts","name","value","Total","Button","onClick","text","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Header = props => {\n    return (\n        <div>\n            <h1>{props.title}</h1>\n        </div>\n    );\n};\n\nconst History = props => {\n    if (props.allClicks.length === 0) {\n        return <div>the app is used by pressing the buttons</div>;\n    }\n\n    return <div>button press history: {props.allClicks.join(\" \")}</div>;\n};\n\nconst Part = props => {\n    return (\n        <div>\n            {props.part} {props.values}\n        </div>\n    );\n};\n\nconst Content = props => {\n    return (\n        <div>\n            <Part part={props.parts[0].name} values={props.parts[0].value} />\n            <Part part={props.parts[1].name} values={props.parts[1].value} />\n            <Part part={props.parts[2].name} values={props.parts[2].value} />\n        </div>\n    );\n};\n\nconst Total = props => {\n    return (\n        <div>\n            <p>\n                Number of exercises{\" \"}\n                {props.parts[0].value + props.parts[1].value + props.parts[2].value}\n            </p>\n        </div>\n    );\n};\n\nconst Button = ({ onClick, text }) => <button onClick={onClick}>{text}</button>;\n\nconst App = () => {\n    // save clicks of each button to own state\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    let parts = [\n        {\n            name: \"good\",\n            value: good\n        },\n        {\n            name: \"neutral\",\n            value: neutral\n        },\n        {\n            name: \"bad\",\n            value: bad\n        }\n    ];\n\n    const title = \"give feedback\";\n\n    const handleGoodClick = () => {\n        setGood(good + 1);\n    };\n\n    const handleNeutralClick = () => {\n        setNeutral(neutral + 1);\n    };\n\n    const handleBadClick = () => {\n        setBad(bad + 1);\n    };\n\n    return (\n        <div>\n            <Header title={title} />\n            <div>\n                <Button onClick={handleGoodClick} text=\"good\" />\n                <Button onClick={handleNeutralClick} text=\"neutral\" />\n                <Button onClick={handleBadClick} text=\"bad\" />\n            </div>\n            <h1>statistics</h1>\n            <div>\n                <Content parts={parts} />\n            </div>\n        </div>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}