{"ast":null,"code":"import _slicedToArray from \"/Users/aleksandarzivkovic/fullstackopen_2019/part1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aleksandarzivkovic/fullstackopen_2019/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.title));\n};\n\nconst History = props => {\n  if (props.allClicks.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"the app is used by pressing the buttons\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"button press history: \", props.allClicks.join(' '));\n};\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const title = \"give feedback\";\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleGoodClick,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleBadClick,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/aleksandarzivkovic/fullstackopen_2019/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Header","props","title","History","allClicks","length","join","Button","onClick","text","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADJ,CADJ;AAKH,CAND;;AAQA,MAAMC,OAAO,GAAIF,KAAD,IAAW;AACvB,MAAIA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ;AAKH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAC2BJ,KAAK,CAACG,SAAN,CAAgBE,IAAhB,CAAqB,GAArB,CAD3B,CADJ;AAKH,CAdD;;AAgBA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KACX;AAAQ,EAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,IADL,CADJ;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAEd;AAFc,oBAGUZ,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,QAGPa,IAHO;AAAA,QAGDC,OAHC;;AAAA,qBAIgBd,QAAQ,CAAC,CAAD,CAJxB;AAAA;AAAA,QAIPe,OAJO;AAAA,QAIEC,UAJF;;AAAA,qBAKQhB,QAAQ,CAAC,CAAD,CALhB;AAAA;AAAA,QAKPiB,GALO;AAAA,QAKFC,MALE;;AAOd,QAAMd,KAAK,GAAG,eAAd;;AAEA,QAAMe,eAAe,GAAG,MAAM;AAC1BL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,GAFD;;AAIA,QAAMO,kBAAkB,GAAG,MAAM;AAC7BJ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAFD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AACzBH,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEb,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEe,eAAjB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAqC,IAAA,IAAI,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,CADJ;AAWH,CAhCD;;AAkCApB,QAAQ,CAACqB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Header = (props) => {\n    return (\n        <div>\n            <h1>{props.title}</h1>\n        </div>\n    )\n}\n\nconst History = (props) => {\n    if (props.allClicks.length === 0) {\n        return (\n            <div>\n                the app is used by pressing the buttons\n      </div>\n        )\n    }\n\n    return (\n        <div>\n            button press history: {props.allClicks.join(' ')}\n        </div>\n    )\n}\n\nconst Button = ({ onClick, text }) => (\n    <button onClick={onClick}>\n        {text}\n    </button>\n)\n\n\nconst App = () => {\n\n    // save clicks of each button to own state\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    const title = \"give feedback\"\n\n    const handleGoodClick = () => {\n        setGood(good + 1)\n    }\n\n    const handleNeutralClick = () => {\n        setNeutral(neutral + 1)\n    }\n\n    const handleBadClick = () => {\n        setBad(bad + 1)\n    }\n\n    return (\n        <div>\n            <Header title={title} />\n            <div>\n                <Button onClick={handleGoodClick} text='good' />\n                <Button onClick={handleNeutralClick} text='neutral' />\n                <Button onClick={handleBadClick} text='good' />\n            </div>\n        </div>\n    )\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}