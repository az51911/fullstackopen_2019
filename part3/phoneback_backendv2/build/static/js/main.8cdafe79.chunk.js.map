{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/PersonService.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","input_string","change_function","react_default","a","createElement","value","onChange","PersonForm","props","onSubmit","input_name","input_name_onchange","input_number","input_number_onchange","type","Persons","persons_info","search_string","DeletePersonButton","Person","_ref2","id","name","number","onClick","PeopleToShow","filter","person","toUpperCase","includes","map","key","baseUrl","PersonService","axios","get","then","response","console","log","data","newObject","post","put","concat","delete","Notification","message","messageId","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","searchString","setSearch","_useState9","_useState10","PersonsChange","setPersonsChange","_useState11","_useState12","confirmationMessage","setConfirmationMessage","_useState13","_useState14","messageValue","setMessageValue","useEffect","initialPeople","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","person_already_there_flag","PersonObject","length","forEach","element","person_to_update","result","window","confirm","setTimeout","catch","error","n","components_Persons","person_to_delete_name","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.8cdafe79.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ input_string, change_function }) => {\n    return (\n        <form>\n            <div>\n                filter shown with{\" \"}\n                <input value={input_string} onChange={change_function} />\n            </div>\n        </form>\n    );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = props => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name:{\" \"}\n                <input value={props.input_name} onChange={props.input_name_onchange} />\n                <div>\n                    number:{\" \"}\n                    <input\n                        value={props.input_number}\n                        onChange={props.input_number_onchange}\n                    />\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons_info, search_string, DeletePersonButton }) => {\n    let showAll = search_string === \"\";\n\n    const Person = ({id,name,number}) => {\n        return (\n            <div>\n                {name} {number}  <button onClick={() => { DeletePersonButton(id)}}> delete </button>\n            </div>\n        );\n    };\n\n    const PeopleToShow = showAll\n        ? persons_info\n        : persons_info.filter(person =>\n            person.name.toUpperCase().includes(search_string.toUpperCase())\n        );\n\n    const entries = () => \n        PeopleToShow.map(person => (\n        <Person key={person.id} id={person.id} name={person.name} number={person.number} /> )\n    );\n\n    return <div>{entries()}</div>;\n};\n\nexport default Persons;\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://pacific-mesa-55433.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        console.log(response.data)\n        return response.data\n    })\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst delete_person = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nexport default { getAll, create, update, delete_person }","import React from 'react'\n\nconst Notification = ({ message, messageId }) => {\n    \n    if (message === null) {\n        return null\n    }\n    \n    return (\n        <div className={messageId}>\n            {message}\n        </div>\n    )\n\n}\n\nexport default Notification ","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport PersonService from './services/PersonService'\nimport Notification from './components/Notification' \n\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState(\"\")\n    const [newNumber, setNewNumber] = useState(\"\")\n    const [searchString, setSearch] = useState(\"\")\n    const [PersonsChange, setPersonsChange] = useState(false)\n    const [confirmationMessage, setConfirmationMessage] = useState(null)\n    const [messageValue, setMessageValue] = useState(null)\n\n    useEffect(() => {\n        console.log(\"use effect now\")\n        console.log(\"PersonChange is: \", PersonsChange)\n        PersonService\n            .getAll()\n            .then(initialPeople => {\n                console.log(initialPeople)\n                setPersons(initialPeople)\n        })\n    }, [PersonsChange])\n\n\n\n    const handleSearchChange = event => {\n        //console.log(event.target.value)\n        setSearch(event.target.value)\n    };\n\n    const handlePersonChange = event => {\n        //console.log(event.target.value)\n        setNewName(event.target.value)\n    };\n\n    const handleNumberChange = event => {\n        //console.log(event.target.value)\n        setNewNumber(event.target.value)\n    };\n\n    const addPerson = event => {\n        event.preventDefault();\n        let person_already_there_flag = 0;\n        const PersonObject = {\n            id: persons.length + 1,\n            name: newName,\n            number: newNumber\n        };\n\n        persons.forEach(element => {\n            if (element.name === PersonObject.name) {\n                let person_to_update = element.name\n                let result = window.confirm(`${person_to_update} is already added to the phonebook, replace the old number with a new one?`);\n                PersonObject.id = element.id\n                person_already_there_flag = 1\n                if(result){\n                    PersonService.update(element.id, PersonObject)\n                        .then(data => {\n                            console.log(\"response is: \",data)\n                            setPersonsChange(!PersonsChange)\n                            \n                            setConfirmationMessage(\n                                `${PersonObject.name}'s number was updated`\n                            )\n                            setTimeout(() => {\n                                setConfirmationMessage(null)\n                            }, 3000)\n                            setMessageValue(\"update\")\n                        })\n                        .catch(error => {\n                            setConfirmationMessage(\n                                `Information of ${PersonObject.name} was already removed from server`\n                            )\n                            setTimeout(() => {\n                                setConfirmationMessage(null)\n                            }, 3000)\n                            setMessageValue(\"error\")\n                            setPersons(persons.filter(n => n.id !== PersonObject.id))\n                            console.log(persons)\n                            setPersonsChange(!PersonsChange)\n                        })\n\n                    }\n                }\n        });\n        if (!person_already_there_flag) {\n            console.log(\"adding person\")\n            PersonService\n                .create(PersonObject)\n                .then(data => {\n                    console.log(\"person added\")\n                    setPersonsChange(!PersonsChange)\n                    setPersons(persons.concat(data))\n                    setConfirmationMessage(\n                        `${PersonObject.name} added`\n                    )\n                    setTimeout(() => {\n                        setConfirmationMessage(null)\n                    }, 3000)\n                    setMessageValue(\"addition\")\n                    console.log(persons)\n                })\n                .catch(error => {\n                    setConfirmationMessage(\n                        `Input validation error, did not add person \\n`\n                    )\n                    setTimeout(() => {\n                        setConfirmationMessage(null)\n                    }, 3000)\n                    setMessageValue(\"error\")\n                    setPersons(persons.filter(n => n.id !== PersonObject.id))\n                    console.log(persons)\n                    setPersonsChange(!PersonsChange)\n                })\n        }\n\n    };\n\n\n    const DeletePerson = (props) => {\n        let id = props\n        let person_to_delete = persons.filter(person =>\n            person.id === id)\n        let person_to_delete_name = person_to_delete[0].name\n        console.log(id)\n        console.log(person_to_delete_name)\n        let result = window.confirm(`delete ${person_to_delete_name}?`)\n        if(result)\n        {\n            PersonService.delete_person(id)\n                .then(data => {\n                    setPersonsChange(!PersonsChange)\n                })\n                .catch(error => {\n                    setConfirmationMessage(\n                        `Information of ${person_to_delete_name} was already removed from server`\n                    )\n                    setTimeout(() => {\n                        setConfirmationMessage(null)\n                    }, 3000)\n                    setMessageValue(\"error\")\n                    setPersonsChange(!PersonsChange)\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={confirmationMessage} messageId={messageValue} />\n            <Filter\n                input_string={searchString}\n                change_function={handleSearchChange}\n            />\n            <h3>add a new</h3>\n            <PersonForm\n                onSubmit={addPerson}\n                input_name={newName}\n                input_name_onchange={handlePersonChange}\n                input_number={newNumber}\n                input_number_onchange={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons persons_info={persons} search_string={searchString} DeletePersonButton={DeletePerson}/> \n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\" \nimport './index.css'\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}